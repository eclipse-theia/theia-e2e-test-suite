name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 4 * * *" # Runs every day at 4am: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule

jobs:
  build:
    name: E2E Tests on ubuntu-latest with Node.js 16.x
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js "16.x"
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: Use Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build
        shell: bash
        run: |
          yarn

      - name: Checkout Theia
        uses: actions/checkout@v3
        with:
          repository: eclipse-theia/theia
          path: ./theia

      - name: Build Theia
        shell: bash
        working-directory: ./theia
        run: |
          yarn --skip-integrity-check --network-timeout 100000
          yarn browser build
          yarn electron build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # https://github.com/microsoft/vscode-ripgrep/issues/9

      - name: Cache Build Result
        uses: actions/cache@v3
        id: build-result
        with:
          path: ./*
          key: ${{ github.run_number }}

  browser-tests:
    name: E2E Browser Tests on ubuntu-latest with Node.js 16.x
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [build]

    steps:
      - name: Restore Build Result (#${{ github.run_number }})
        uses: actions/cache/restore@v3
        id: build-result
        with:
          path: ./*
          key: ${{ github.run_number }}
          fail-on-cache-miss: true

      - name: Use Node.js "16.x"
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: Use Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Run Theia
        shell: bash
        working-directory: ./theia
        run: yarn browser start &

      - name: Test (playwright browser)
        shell: bash
        run: yarn ui-tests-ci

      - name: Upload test results (browser)
        uses: actions/upload-artifact@v3
        with:
          name: ui-tests-browser-${{ github.run_number }}
          path: allure-results/*

  electron-tests:
    name: E2E Electron Tests on ubuntu-latest with Node.js 16.x
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [build]

    steps:
      - name: Restore Build Result (#${{ github.run_number }})
        uses: actions/cache/restore@v3
        id: build-result
        with:
          path: ./*
          key: ${{ github.run_number }}
          fail-on-cache-miss: true

      - name: Use Node.js "16.x"
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"

      - name: Use Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Test (playwright electron)
        shell: bash
        run: xvfb-run yarn ui-tests-ci-electron

      - name: Upload test results (electron)
        uses: actions/upload-artifact@v3
        with:
          name: ui-tests-electron-${{ github.run_number }}
          path: allure-results/*

  generate-report:
    name: Generate Report of E2E Electron Tests
    runs-on: ubuntu-latest
    needs: [browser-tests, electron-tests]

    steps:
      - name: Get History
        uses: actions/checkout@v2
        if: always() && github.ref == 'refs/heads/main'
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Download test results (Browser)
        uses: actions/download-artifact@v4
        with:
          path: allure-results
          name: ui-tests-browser-${{ github.run_number }}
      - name: Download test results (Electron)
        uses: actions/download-artifact@v4
        with:
          path: allure-results
          name: ui-tests-electron-${{ github.run_number }}

      - name: Display structure of downloaded files
        run: ls -R

      - name: Generate Report
        uses: simple-elf/allure-report-action@master
        if: always() && github.ref == 'refs/heads/main'
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 100
          subfolder: allure

      - name: Publish Report
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
